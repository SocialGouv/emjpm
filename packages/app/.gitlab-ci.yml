#

Install app:
  extends: .base_yarn_workspace_install
  variables:
    CONTEXT: app
  before_script:
    - find packages -maxdepth 1 -type d -not -name app | tail -n +2 | xargs rm -rf
  artifacts:
    expire_in: 30 mins
    paths:
      - node_modules
      - packages/app/node_modules

#

Lint @emjpm/app:
  extends: .quality_stage
  image: node:12-alpine
  dependencies:
    - Install app
  needs:
    - Install app
  script:
    - yarn workspace @emjpm/app lint

Test @emjpm/app:
  extends: .quality_stage
  image: node:12-alpine
  dependencies:
    - Install app
  needs:
    - Install app
  services:
    - name: postgres:10-alpine
  allow_failure: true
  retry: 1
  variables:
    DATABASE_URL: psql://postgres:@localhost/emjpm
    PGHOST: localhost
    PGUSER: postgres
    TZ: Europe/Paris
  before_script:
    - apk add --update --no-cache postgresql=~11
    - psql --version
    #
    - pg_isready -h localhost
  script:
    - sh -x docker/postgres/postgres-init.sh
    - yarn workspace @emjpm/app test

#

Build @emjpm/app:
  extends: .quality_stage
  dependencies: []
  variables:
    INVALID_GIT_FILES_CHANGES: "true"
  needs:
    - Install app
  image: node:12-alpine
  script:
    - yarn workspace @emjpm/app build
  artifacts:
    expire_in: 30 mins
    paths:
      - packages/app/.next

#

Register app image:
  extends:
    - .base_register_stage
    - .register_stage
  dependencies:
    - Build @emjpm/app
  needs:
    - Install app
    - Build @emjpm/app
  before_script:
    - cp yarn.lock packages/app/yarn.lock
  variables:
    CONTEXT: packages/app
    IMAGE_NAME: $CI_REGISTRY_IMAGE/app

#

.deploy_app_stage: &deploy_app_stage
  dependencies: []
  stage: Deploy
  extends: .base_deploy_nodejs_chart_stage
  variables:
    CONTEXT: app
    IMAGE_TAG: $CI_COMMIT_SHA
    PORT: 80
    VALUES_FILE: ./packages/app/.k8s.values.yml
  before_script:
    - source ./.gitlab-ci/env.sh
    - kubectl config set-context --current --namespace=${K8S_NAMESPACE}
    #
    - HOST=${FRONTEND_HOST}

#

Deploy app (dev):
  extends:
    - .deploy_app_stage
    - .dev_stage

Deploy app (prod):
  extends:
    - .deploy_app_stage
    - .incubateur_stage
