#

Install app:
  extends: .base_yarn_workspace_install
  variables:
    CONTEXT: app
  before_script:
    - find packages -maxdepth 1 -type d -not -name app | tail -n +2 | xargs rm -rf
  artifacts:
    expire_in: 30 mins
    paths:
      - node_modules
      - packages/app/node_modules

#

Lint @emjpm/app:
  extends: .quality_stage
  image: node:12-alpine
  dependencies:
    - Install app
  needs:
    - Install app
  script:
    - yarn workspace @emjpm/app lint

Test @emjpm/app:
  extends: .quality_stage
  image: node:12-alpine
  dependencies:
    - Install app
  needs:
    - Install app
  services:
    - name: postgres:10-alpine
  allow_failure: true
  retry: 1
  variables:
    DATABASE_URL: psql://postgres:@localhost/emjpm
    PGHOST: localhost
    PGUSER: postgres
    TZ: Europe/Paris
  before_script:
    - apk add --update --no-cache postgresql=~11
    - psql --version
    #
    - pg_isready -h localhost
  script:
    - sh -x docker/postgres/postgres-init.sh
    - yarn workspace @emjpm/app test

#

Build @emjpm/app:
  extends: .quality_stage
  dependencies: []
  needs:
    - Install app
  image: node:12-alpine
  script:
    - apk add curl=~7 git=~2
    #
    - wget https://raw.githubusercontent.com/SocialGouv/gitlab-ci-yml/v4.5.4/minio_s3_cache.sh &&
      source minio_s3_cache.sh
    - wget https://raw.githubusercontent.com/SocialGouv/gitlab-ci-yml/v4.5.4/git_files_changes.sh &&
      source git_files_changes.sh
    - wget https://raw.githubusercontent.com/SocialGouv/gitlab-ci-yml/v4.5.4/manual_caching.sh &&
      source manual_caching.sh
    #
    - checking_cache "${CI_COMMIT_REF_SLUG}/app-build.tar.gz" ||
      (echo "" && checking_cache ${CI_DEFAULT_BRANCH}/app-build.tar.gz) ||
      true
    #
    - >-
      if [[ -d packages/app/.next ]] && [[ -z ${INVALID_GIT_FILES_CHANGES} ]] ; then
        echo '"packages/app/.next" folder found !'

        git fetch origin ${CI_DEFAULT_BRANCH}
        if ! git_files_changes "^packages/app/src"; then
          echo "Skipping job as ^packages/app/src didn't change"
          exit ${CI_JOB_SKIP_EXIT_CODE:-0}
        fi

        echo "^packages/app/src files change detected"

        rm -rf packages/app/.next/server
        rm -rf packages/app/.next/static
      fi
    #

    - checking_cache "${CI_COMMIT_REF_SLUG}/app-node_modules.tar.gz" ||
      (echo "" && checking_cache ${CI_DEFAULT_BRANCH}/app-node_modules.tar.gz) ||
      true
    - yarn workspace @emjpm/app build

    #
    - creating_cache app-build.tar.gz packages/app/.next || true
  artifacts:
    expire_in: 30 mins
    paths:
      - packages/app/.next

#

Register app image:
  extends:
    - .base_register_stage
    - .register_stage
  dependencies:
    - Build @emjpm/app
  needs:
    - Install app
    - Build @emjpm/app
  before_script:
    - cp yarn.lock packages/app/yarn.lock
  variables:
    CONTEXT: packages/app
    IMAGE_NAME: $CI_REGISTRY_IMAGE/app

#

.deploy_app_stage: &deploy_app_stage
  dependencies: []
  stage: Deploy
  extends: .base_deploy_nodejs_chart_stage
  variables:
    CONTEXT: app
    IMAGE_TAG: $CI_COMMIT_SHA
    PORT: 80
    VALUES_FILE: ./packages/app/.k8s.values.yml
  before_script:
    - source ./.gitlab-ci/env.sh
    - kubectl config set-context --current --namespace=${K8S_NAMESPACE}
    #
    - HOST=${FRONTEND_HOST}

#

Deploy app (dev):
  extends:
    - .deploy_app_stage
    - .dev_stage

Deploy app (prod):
  extends:
    - .deploy_app_stage
    - .incubateur_stage
