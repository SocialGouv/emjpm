image:
  repository: registry.gitlab.factory.social.gouv.fr/socialgouv/emjpm/hasura
  tag: latest
  pullPolicy: IfNotPresent
labels: {}
deployment:
  annotations: {}
  replicaCount: 1
  imagePullSecrets: []
  port: 80
  livenessProbe:
    initialDelaySeconds: 5
    path: /
    periodSeconds: 10
    failureThreshold: 10
    timeoutSeconds: 10
  readinessProbe:
    initialDelaySeconds: 5
    path: /
    periodSeconds: 10
    failureThreshold: 10
    timeoutSeconds: 10
  resources:
    limits:
      cpu: 250m
      memory: 1280Mi
    requests:
      cpu: 10m
      memory: 1024Mi
  env:
    - name: PGSSLMODE
      value: require
    - name: HASURA_GRAPHQL_DATABASE_URL
      value: >-
        postgres://${POSTGRES_EMJPM_USER_ENCODED}:${POSTGRES_EMJPM_PASSWORD_ENCODED}@${PG_HOST}/${POSTGRES_DATABASE_EMJPM}
    - name: HASURA_GRAPHQL_ENABLE_CONSOLE
      value: 'true'
    - name: HASURA_GRAPHQL_UNAUTHORIZED_ROLE
      value: anonymous
    - name: HASURA_GRAPHQL_ADMIN_SECRET
      valueFrom:
        secretKeyRef:
          name: emjpm-secret
          key: HASURA_GRAPHQL_ADMIN_SECRET
    - name: HASURA_GRAPHQL_JWT_SECRET
      value: '{"type": "RS256","jwk_url": "http://${API_SRV_HOST}/api/auth/jwks"}'
    - name: HASURA_GRAPHQL_SERVER_PORT
      value: '${PORT}'
    - name: HASURA_WEB_HOOK_BASE_URL
      value: 'http://${API_SRV_HOST}'
    - name: HASURA_WEB_HOOK_SECRET
      valueFrom:
        secretKeyRef:
          name: emjpm-secret
          key: HASURA_WEB_HOOK_SECRET
  nodeSelector: {}
  tolerations: []
  affinity: {}
  initContainers: []
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: 'true'
    nginx.ingress.kubernetes.io/limit-connections: '2'
    nginx.ingress.kubernetes.io/limit-rpm: '60'
  hosts:
    - host: hasura-emjpm.dev2.fabrique.social.gouv.fr
      paths:
        - path: /
          servicePort: '${PORT}'
  tls:
    - hosts:
        - hasura-emjpm.dev2.fabrique.social.gouv.fr
      secretName: hasura-certificate
fullnameOverride: ''
nameOverride: ''
service:
  type: ClusterIP
  port: '${PORT}'
  targetPort: '${PORT}'
