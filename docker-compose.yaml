version: "3"

#
# In development we only start postgres server
#
# Listening ports :
#  - 5000 : hasura
#  - 5434 : postgres
#

services:
  db:
    container_name: emjpm-postgres
    build:
      context: ./docker/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      # master password
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
      # API dedicated password
      - POSTGRES_EMJPM_USER=emjpm
      - POSTGRES_EMJPM_PASSWORD=test
      # Hasura dedicated user
      - POSTGRES_HASURA_USER=hasura
      - POSTGRES_HASURA_PASSWORD=hasura
    ports:
      - "5434:5432"
    volumes:
      - emjpm-pgdata:/var/lib/postgresql/data

  maildev:
    image: djfarrelly/maildev
    command: bin/maildev --web 1080 --smtp 1025 --hide-extensions STARTTLS
    ports:
      - "1025:1025"
      - "1080:1080"

  graphql-engine:
    build:
      context: ./packages/hasura
    ports:
      - 5000:8080
    depends_on:
      - db
    # network_mode: "host"
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: $HASURA_GRAPHQL_ADMIN_SECRET
      HASURA_GRAPHQL_DATABASE_URL: postgres://hasura:hasura@db:5432/emjpm
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_JWT_SECRET: '{"type": "RS256","jwk_url": "$API_URL_DOCKER/api/auth/jwks"}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
      HASURA_WEB_HOOK_BASE_URL: $HASURA_WEB_HOOK_BASE_URL
      HASURA_WEB_HOOK_SECRET: $HASURA_WEB_HOOK_SECRET
      WEB_HOOK_URL_EMAIL_ACCOUNT_VALIDATION: $WEB_HOOK_URL_EMAIL_ACCOUNT_VALIDATION
      WEB_HOOK_URL_EMAIL_SERVICE_MEMBER_INVITATION: $WEB_HOOK_URL_EMAIL_SERVICE_MEMBER_INVITATION
      WEB_HOOK_URL_TOKEN_REQUEST: $WEB_HOOK_URL_TOKEN_REQUEST

volumes:
  emjpm-pgdata:
