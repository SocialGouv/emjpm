#!/bin/sh

set -e

set -a
source $(dirname $0)/.env-db
set +a

DB_SECRET_NS="${K8SCI_PROJECT}-secret"
AZURE_DB_SECRET_NAME="azure-emjpmdev-volume"
export AZURE_STORAGE_ACCOUNT_NAME=$(kubectl -n $DB_SECRET_NS get secret $AZURE_DB_SECRET_NAME \
  -ojsonpath='{.data.azurestorageaccountname}')
export AZURE_STORAGE_ACCOUNT_KEY=$(kubectl -n $DB_SECRET_NS get secret $AZURE_DB_SECRET_NAME \
  -ojsonpath='{.data.azurestorageaccountkey}')

AZURE_STORAGE_SECRET_SUFFIX=$(echo $K8SCI_BRANCH | sed -e 's/[^[:alnum:]]/-/g')
export AZURE_STORAGE_SECRET_NAME="${K8SCI_PROJECT}-azure-storage-${AZURE_STORAGE_SECRET_SUFFIX}"

DB_SECRET_NS="${K8SCI_PROJECT}-secret"
DB_SECRET_NAME="azure-pg-${K8SCI_PROJECT}-user"
export PGHOST=$(kubectl -n $DB_SECRET_NS get secret $DB_SECRET_NAME \
  -ojsonpath='{.data.PGHOST}' | base64 --decode)
export PGUSER=$(kubectl -n $DB_SECRET_NS get secret $DB_SECRET_NAME \
  -ojsonpath='{.data.PGUSER}' | base64 --decode)
export PGPASSWORD=$(kubectl -n $DB_SECRET_NS get secret $DB_SECRET_NAME \
  -ojsonpath='{.data.PGPASSWORD}' | base64 --decode)


cat ./.k8sci/scripts/jobs/db-restore-job.yml | gomplate | kubectl apply -f -
kubectl wait --for=condition=complete "job/db-restore-${K8SCI_GID}" --timeout=600s

cat ./.k8sci/scripts/jobs/db-anonymize-job.yml | gomplate | kubectl apply -f -
kubectl wait --for=condition=complete "job/db-anonymize-${K8SCI_GID}" --timeout=600s