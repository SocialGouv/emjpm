apiVersion: batch/v1
kind: Job
metadata:
  name: pipeline-{{.Env.K8SCI_GID}}-job-db-backup
  labels:
    app.kubernetes.io/managed-by: k8sci
    k8sci/gid: "{{.Env.K8SCI_GID}}"
    k8sci/type: job
    k8sci/job: db-backup
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: k8sci
        k8sci/gid: "{{.Env.K8SCI_GID}}"
        k8sci/type: job
        k8sci/job: db-backup
    spec:
      restartPolicy: Never
      containers:
        - name: backup-job
          image: postgres:10-alpine
          env:
            - name: K8SCI_PROJECT
              value: {{.Env.K8SCI_PROJECT}}
            - name: PGSSLMODE
              value: "require"
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{.Env.PSQL_CREDS_SECRET_NAME}}
                  key: PGHOST
            - name: DB_NAME
              value: {{.Env.DB_NAME}}
            - name: APP_PG_ROLE
              value: {{.Env.APP_PG_ROLE}}
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{.Env.PSQL_CREDS_SECRET_NAME}}
                  key: ADMIN_PGUSER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{.Env.PSQL_CREDS_SECRET_NAME}}
                  key: ADMIN_PGPASSWORD
          volumeMounts:
            - mountPath: "/data"
              name: data
          command:
            - sh
            - -c
            - |
              echo $PGUSER
              set -e
              TIMESTAMP=$(date '+%Y-%m-%d_%H-%M-%S')
              BACKUP_FILENAME="backup_${K8SCI_PROJECT}_${TIMESTAMP}.dump"
              pg_dump --verbose -Fc $DB_NAME > /data/$BACKUP_FILENAME
              echo "$BACKUP_FILENAME" > /data/LATEST

      volumes:
        - name: data
          azureFile:
            secretName: {{.Env.AZURE_STORAGE_SECRET_NAME}}
            shareName: {{.Env.K8SCI_PROJECT}}-backup-restore
            readOnly: false
