---
kind: Pod
apiVersion: v1
metadata:
  name: emjpm-dataset${HASH_BRANCH_NAME}
  labels:
    app: emjpm-dataset
    branch: emjpm-dataset${HASH_BRANCH_NAME}
spec:
  containers:
  - image: ${EMJPM_REGISTRY}:${IMAGE_TAG}
    name: emjpm-dataset${HASH_BRANCH_NAME}
    command: ["sh"]
    args: ["/dataset/inject-dataset.sh"]
    env:
    - name: DATABASE_URL
      value: "psql://${POSTGRES_API_USER}:${POSTGRES_API_USER_PASSWORD}@postgres${HASH_BRANCH_NAME}/emjpm_dev"
    - name: NODE_ENV
      value: "development"
    volumeMounts:
    - name: dataset
      mountPath: /dataset
  volumes:
  - name: dataset
    configMap:
      name: init-postgres
  restartPolicy: Never
  initContainers:
  - name: wait-for-postgres
    image: postgres:11-alpine
    imagePullPolicy: Always
    command:
    - sh
    - -c
    - |
      retry=120; # 5s * (12 * 10) = 10min
      while ! pg_isready -h postgres${HASH_BRANCH_NAME} > /dev/null 2> /dev/null && [[ $(( retry-- )) -gt 0 ]];
        do
          echo "Waiting for Postgres to go Green ($(( retry )))" ; sleep 5s ; done ;
      echo Ready;
