---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ${K8S_PROJECT}-${CONTEXT}-${BRANCH_HASH}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${K8S_PROJECT}-${CONTEXT}-${BRANCH_HASH}
  template:
    metadata:
      labels:
        app: ${K8S_PROJECT}-${CONTEXT}-${BRANCH_HASH}
        git/branch: ${BRANCH_NAME}
        git/commit: ${COMMIT}
        gitlab/job: "${JOB_ID}"
    spec:
      containers:
        - image: ${IMAGE_NAME}:${IMAGE_TAG}
          name: ${K8S_PROJECT}-${CONTEXT}
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: 15m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 256Mi
          ports:
            - containerPort: ${PORT}
          env:
            - name: HASURA_GRAPHQL_DATABASE_URL
              value: "postgres://${POSTGRES_HASURA_USER}:${POSTGRES_HASURA_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DATABASE}"
            - name: HASURA_GRAPHQL_ENABLE_CONSOLE
              value: "true"
            - name: HASURA_GRAPHQL_ADMIN_SECRET
              valueFrom:
                secretKeyRef:
                  name: emjpm-secret
                  key: HASURA_GRAPHQL_ADMIN_SECRET
            - name: HASURA_GRAPHQL_JWT_SECRET
              value: '{"type": "RS256","jwk_url": "http://${K8S_PROJECT}-api-${BRANCH_HASH}/api/v2/auth/jwks"}'
            - name: HASURA_GRAPHQL_SERVER_PORT
              value: "${PORT}"
            - name: WHATEVER_URL
              value: "http://${K8S_PROJECT}-graphql-server-${BRANCH_HASH}"
      initContainers:
        - name: check-db-ready
          image: postgres:10.10
          command: ['sh', '-c',
                    'until pg_isready -h ${POSTGRES_HOST} -p 5432;
                do echo waiting for database; sleep 2; done;']
          resources:
            requests:
              cpu: 0m
              memory: 0Mi
            limits:
              cpu: 50m
              memory: 32Mi
