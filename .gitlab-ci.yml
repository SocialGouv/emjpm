
---

#

include:
  - /.gitlab-ci/variables.yml
  - /.gitlab-ci/extends.yml
  #
  - /.gitlab-ci/stages/prepare.yml
  - /.gitlab-ci/stages/quality.yml
  - /.gitlab-ci/stages/register.yml
  - /.gitlab-ci/stages/notify.yml
  - /.gitlab-ci/stages/deploy.yml

#

stages:
- "Prepare"
- "Code Quality"
- "Registration"
- "Deploy"
- "Notify Finished Deployment"

Register puppeteer image:
  <<: *register_stage
  stage: "Prepare"
  variables:
    CONTEXT: ./optional/e3e/puppetteer
    DOCKER_BUILD_ARGS: ""
    IMAGE_NAME: $CI_REGISTRY_IMAGE/puppeteer

#
<<<<<<< HEAD
=======

Lint @emjpm/api:
  <<: *quality_stage
  <<: *master_based_stage
  script:
    - yarn workspace @emjpm/api lint

Lint @emjpm/app:
  <<: *quality_stage
  <<: *master_based_stage
  script:
    - yarn workspace @emjpm/app lint

Lint @emjpm/knex:
  <<: *quality_stage
  <<: *master_based_stage
  script:
    - yarn workspace @emjpm/knex lint

Lint @optional/e2e:
  <<: *quality_stage
  <<: *master_based_stage
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - /app/optional/e2e/node_modules/
      - $CI_PROJECT_DIR/.yarn
  script:
    - yarn config set cache-folder $CI_PROJECT_DIR/.yarn
    - yarn run -- lerna exec --scope=@optional/e2e yarn -- --ignore-scripts
    - yarn run -- lerna run --scope=@optional/e2e lint

Lint jest-environment-knex:
  <<: *quality_stage
  <<: *master_based_stage
  script:
    - yarn workspace jest-environment-knex lint

#

Test @emjpm/api:
  <<: *quality_stage
  <<: *master_based_stage
  services:
    - name: $CI_REGISTRY_IMAGE/postgres:$CI_COMMIT_SHA
      command:
        [
          "-p",
          "5434",
          "-c",
          "fsync=off",
          "-c",
          "synchronous_commit=off",
          "-c",
          "full_page_writes=off",
        ]
  artifacts:
    paths:
      - packages/api/coverage
  variables:
    GIT_STRATEGY: none
    JEST_COVERAGE_DIRECTORY: $CI_PROJECT_DIR/packages/api/coverage
    JWT_KEY: JWT_KEY
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: test
  script:
    - npx wait-port --timeout 30000 localhost:5434 # 30_000 = 1000 * 30s
    - yarn workspace @emjpm/api test --coverage

Test @emjpm/app:
  <<: *quality_stage
  <<: *master_based_stage
  artifacts:
    paths:
      - packages/app/coverage
  variables:
    GIT_STRATEGY: none
    JEST_COVERAGE_DIRECTORY: $CI_PROJECT_DIR/packages/app/coverage
  script:
    - yarn workspace @emjpm/app test --coverage

Test @emjpm/knex:
  <<: *quality_stage
  <<: *master_based_stage
  services:
    - name: $CI_REGISTRY_IMAGE/postgres:$CI_COMMIT_SHA
      command: ["-p", "5434"]
  variables:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: test
  script:
    - npx wait-port --timeout 30000 localhost:5434 # 30_000 = 1000 * 30s
    - yarn workspace @emjpm/knex test

#

Send coverage result:
  stage: "Registration"
  image: node:lts-alpine
  dependencies:
    - Test @emjpm/api
    - Test @emjpm/app
  script:
    - npx codecov

#

Register api image:
  <<: *register_stage
  variables:
    CONTEXT: packages/api
    DOCKER_BUILD_ARGS: >-
      --build-arg BASE_IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    IMAGE_NAME: $CI_REGISTRY_IMAGE/api

Register app image:
  <<: *register_stage
  variables:
    CONTEXT: packages/app
    DOCKER_BUILD_ARGS: >-
      --build-arg BASE_IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    IMAGE_NAME: $CI_REGISTRY_IMAGE/app

#

E2E Test @optional/e2e:
  <<: *end_to_end_stage
  allow_failure: true
  image: $CI_REGISTRY_IMAGE/puppeteer:$CI_COMMIT_SHA
  services:
    - name: $CI_REGISTRY_IMAGE/api:$CI_COMMIT_SHA
    - name: $CI_REGISTRY_IMAGE/app:$CI_COMMIT_SHA
    - name: $CI_REGISTRY_IMAGE/postgres:$CI_COMMIT_SHA
      command:
        [
          "-p",
          "5434",
          "-c",
          "fsync=off",
          "-c",
          "synchronous_commit=off",
          "-c",
          "full_page_writes=off",
        ]
  variables:
    CODECEPT_BASEURL: "http://localhost:80"
    API_URL: http://localhost:4000
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: test
    NODE_ENV: test
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - ./node_modules/
      - ./optional/e3e/puppetteer/node_modules
      - $CI_PROJECT_DIR/.yarn
  artifacts:
    expire_in: 1 week
    when: always
    paths:
      - optional/e3e/puppetteer/output
  script:
    - rm -rf packages/{api,app,jest-environment-knex}
    #
    - yarn config set cache-folder $CI_PROJECT_DIR/.yarn
    - yarn --production --ignore-scripts
    - yarn e2e --frozen-lockfile
    #
    # Database on localhost:5434
    - npx wait-port --timeout 30000 localhost:5434 # 30_000 = 1000 * 30s
    # API on localhost:4000
    - npx wait-port --timeout 30000 localhost:4000 # 30_000 = 1000 * 30s
    # Front on localhost:80
    - npx wait-port --timeout 30000 localhost:80 # 30_000 = 1000 * 30s
    #
    - yarn workspace @emjpm/knex run migrate --env test
    - yarn workspace @emjpm/knex run seeds --env test
    #
    # Allows installation of postgresql-client-10 on Debian stretch which the Node images are based on
    - PGPASSWORD=test pg_dump --host localhost --port 5434 --username=postgres -Fc emjpm_test > optional/e3e/test-seed.dump
    #
    - yarn e2e test
>>>>>>> fa955703... ci(gitlab): run e2e test on gitlab too (3)
