variables:
  GIT_STRATEGY: none
  K8SCI_URL: https://ci-emjpm.dev2.fabrique.social.gouv.fr
  K8SCI_NS: ci-emjpm

stages:
  - Trigger K8SCI
  - Run K8SCI
  - Wait K8SCI

cache:
  paths:
    - .vars/*


Trigger K8SCI:
  when: manual
  stage: Trigger K8SCI
  image: curlimages/curl:7.75.0
  except:
    variables:
      - $RUN_K8SCI
  script:
    - curl --request POST
        --form ref="${CI_COMMIT_REF_NAME}"
        --form token="${CI_JOB_TOKEN}"
        --form variables[RUN_K8SCI]="true"
        ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/trigger/pipeline

Run K8SCI:
  stage: Run K8SCI
  image: curlimages/curl:7.75.0
  only:
    variables:
      - $RUN_K8SCI
  script:
    - mkdir -p .vars
    - curl -sf
      ${K8SCI_URL}/hooks/push?token=${K8SCI_TOKEN}&branch=${CI_COMMIT_BRANCH}
      >.vars/push-results.json


Wait K8SCI:
  stage: Wait K8SCI
  image: registry.gitlab.factory.social.gouv.fr/devthejo/docker-kubectl-helm
  only:
    variables:
      - $RUN_K8SCI
  script:
    - |
      K8SCI_GID=$(jq -r '.id' .vars/push-results.json)
      JOB="job/push-${K8SCI_GID}"

      retval_complete=1
      retval_failed=1
      while [[ $retval_complete -ne 0 ]] && [[ $retval_failed -ne 0 ]]; do
        sleep 2
        output=$(kubectl --namespace=$K8SCI_NS \
          wait --for=condition=complete $JOB --timeout=0 2>&1)
        retval_complete=$?
        output=$(kubectl --namespace=$K8SCI_NS \
          wait --for=condition=failed $JOB --timeout=0 2>&1)
        retval_failed=$?
      done
      if [ $retval_failed -eq 0 ]; then
        echo "$JOB failed"
        exit 1
      else
        echo "$JOB complete"
      fi
