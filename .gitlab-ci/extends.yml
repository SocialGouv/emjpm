#

.base_yarn_workspace_install:
  extends: .prepare_stage
  image: node:12-alpine
  interruptible: true
  variables:
    CONTEXT: ${CI_JOB_NAME}
  script:
    - apk add curl=~7 git=~2
    #
    - wget https://raw.githubusercontent.com/SocialGouv/gitlab-ci-yml/v4.5.4/minio_s3_cache.sh &&
      source minio_s3_cache.sh
    - wget https://raw.githubusercontent.com/SocialGouv/gitlab-ci-yml/v4.5.4/git_files_changes.sh &&
      source git_files_changes.sh
    - wget https://raw.githubusercontent.com/SocialGouv/gitlab-ci-yml/v4.5.4/manual_caching.sh &&
      source manual_caching.sh
    #
    # Download node_modules cache
    - checking_cache "${CI_COMMIT_REF_SLUG}/${CONTEXT}-node_modules.tar.gz" ||
      (echo "" && checking_cache ${CI_DEFAULT_BRANCH}/${CONTEXT}-node_modules.tar.gz) ||
      true
    #
    - >-
      if [[ -d node_modules ]] && [[ -z ${INVALID_GIT_FILES_CHANGES} ]] ; then
        echo '"node_modules" folder found !'

        git fetch origin ${CI_DEFAULT_BRANCH}
        if ! git_files_changes "^packages/${CONTEXT}/package.json"; then
          echo "Skipping job as ^packages/${CONTEXT}/package.json didn't change"
          exit ${CI_JOB_SKIP_EXIT_CODE:-0}
        fi
        echo "^packages/${CONTEXT}/package.json files change detected"
      fi
    #
    # Download yarn cache
    - checking_cache "${CI_COMMIT_REF_SLUG}/${CONTEXT}-yarn.tar.gz" ||
      (echo "" && checking_cache ${CI_DEFAULT_BRANCH}/${CONTEXT}-yarn.tar.gz) ||
      true
    #
    - yarn config set cache-folder $CI_PROJECT_DIR/.yarn
    - yarn --frozen-lockfile
    #
    - creating_cache ${CONTEXT}-yarn.tar.gz .yarn || true
    - creating_cache ${CONTEXT}-node_modules.tar.gz node_modules packages/${CONTEXT}/node_modules || true
