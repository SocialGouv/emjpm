#

.notify_stage: &notify_stage
  image: python:$PYTHON_VERSION
  variables:
    DEPLOY_ID_FILE: github_deploy_id
  before_script:
    - apk add --update curl
    - source .gitlab-ci/env.sh
  dependencies: []

#

Notify Starting Deployment:
  <<: *notify_stage
  stage: "Deploy"
  script:
    - sh -x ./.k8s/scripts/get-deploy-id.sh
    - echo "GitHub deployment id '$(cat github_deploy_id)'"
  artifacts:
    paths:
      - github_deploy_id

#

Notify Fail:
  <<: *notify_stage
  stage: "Notify Finished Deployment"
  allow_failure: true
  when: on_failure
  dependencies:
    - Notify Starting Deployment
  script:
    - echo "Notify Failure to GitHub deployment id '$(cat $DEPLOY_ID_FILE)'"
    - export URL="http://${FRONTEND_HOST}"
    - sh -x ./.k8s/scripts/send-url.sh $(cat $DEPLOY_ID_FILE) failure

Notify Success:
  <<: *notify_stage
  stage: "Notify Finished Deployment"
  when: on_success
  dependencies:
    - Notify Starting Deployment
  script:
    - echo "Notify Success to GitHub deployment id '$(cat $DEPLOY_ID_FILE)'"
    - export URL="http://${FRONTEND_HOST}"
    - sh -x ./.k8s/scripts/send-url.sh $(cat $DEPLOY_ID_FILE) success

Delete useless k8s namespaces:
  stage: "Notify Finished Deployment"
  dependencies: []
  allow_failure: true
  image: ${CI_REGISTRY}/socialgouv/docker/k8s-ns-killer:0.7.2
  variables:
    GIT_STRATEGY: clone
  environment: fabrique-dev
  script:
    - git remote set-url origin https://github.com/${CI_PROJECT_PATH}.git
    - git fetch origin
    - git branch
    - sh -x /bin/k8s-ns-killer emjpm-feature-
  only:
    - master

Release:
  stage: "Notify Finished Deployment"
  image: node:10
  when: manual
  variables:
    GIT_AUTHOR_EMAIL: 45039513+SocialGroovyBot@users.noreply.github.com
    GIT_AUTHOR_NAME: Social Groovy Bot
    GIT_COMMITTER_EMAIL: $GIT_AUTHOR_EMAIL
    GIT_COMMITTER_NAME: $GIT_AUTHOR_NAME
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - $CI_PROJECT_DIR/.yarn
  before_script:
    - git checkout ${CI_COMMIT_REF_NAME}
    - git config user.name "Social Groovy Bot"
    - git config user.email "45039513+SocialGroovyBot@users.noreply.github.com"
    - git remote set-url origin https://${GITHUB_TOKEN}@github.com/${CI_PROJECT_PATH}.git
  script:
    - yarn config set cache-folder $CI_PROJECT_DIR/.yarn
    - yarn --frozen-lockfile
    - GH_TOKEN=${GITHUB_TOKEN} yarn lerna version ${LERNA_ARGS:="--force-publish --yes"}

Put to production:
  <<: *notify_stage
  stage: "Notify Finished Deployment"
  when: manual
  only:
    - tags
  except:
    variables:
      - $PRODUCTION
  script:
    - echo "Put ${CI_COMMIT_REF_NAME}@${CI_COMMIT_SHORT_SHA} in production"
    - curl --request POST
        --form ref="${CI_COMMIT_REF_NAME}"
        --form token="${PIPELINE_TIGER_TOKEN}"
        --form variables[PRODUCTION]="true"
        https://gitlab.factory.social.gouv.fr/api/v4/projects/34/trigger/pipeline
