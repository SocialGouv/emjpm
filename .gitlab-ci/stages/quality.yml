#

.quality_stage: &quality_stage
  stage: "Code Quality"
  dependencies: []
  except:
    variables:
      - $PRODUCTION

.master_based_stage: &master_based_stage
  variables:
    GIT_STRATEGY: none
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  before_script:
    # NOTE(douglasduteil): create artifact friendly path <3
    # As Gitlab artifacts paths seems to only support relative path, I recreate
    # part of the monorepo structure to be able to share coverage info (for ex.)
    - mkdir -p $CI_PROJECT_DIR/packages/{api,app}
    #
    - cd /app

###########################################
###                LINT                 ###
###########################################

Lint @emjpm/api:
  <<: *quality_stage
  <<: *master_based_stage
  only:
    changes:
      - packages/api/**
  script:
    - yarn workspace @emjpm/api lint

Lint @emjpm/app:
  <<: *quality_stage
  <<: *master_based_stage
  only:
    changes:
      - packages/app/**
  script:
    - yarn workspace @emjpm/app lint

Lint @emjpm/graphql-server:
  <<: *quality_stage
  <<: *master_based_stage
  only:
    changes:
      - packages/graphql-server/**
  script:
    - yarn workspace @emjpm/graphql-server lint

Lint @emjpm/knex:
  <<: *quality_stage
  <<: *master_based_stage
  only:
    changes:
      - packages/knex/**
  script:
    - yarn workspace @emjpm/knex lint

Lint @optional/e2e:
  <<: *quality_stage
  <<: *master_based_stage
  only:
    changes:
      - optional/e2e/**
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - /app/optional/e2e/node_modules/
      - $CI_PROJECT_DIR/.yarn
  script:
    - yarn config set cache-folder $CI_PROJECT_DIR/.yarn
    - yarn run -- lerna exec --scope=@optional/e2e yarn -- --ignore-scripts
    - yarn run -- lerna run --scope=@optional/e2e lint

###########################################
###                TESTS                ###
###########################################

Test @emjpm/api:
  <<: *quality_stage
  <<: *master_based_stage
  only:
    changes:
      - packages/api/**
  allow_failure: true
  services:
    - name: $CI_REGISTRY_IMAGE/postgres:$CI_COMMIT_SHA
      command:
        [
          "-p",
          "5434",
          "-c",
          "fsync=off",
          "-c",
          "synchronous_commit=off",
          "-c",
          "full_page_writes=off",
        ]
  artifacts:
    paths:
      - packages/api/coverage
  variables:
    GIT_STRATEGY: none
    JEST_COVERAGE_DIRECTORY: $CI_PROJECT_DIR/packages/api/coverage
    JWT_KEY: JWT_KEY
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: test
  script:
    - npx wait-for-postgres --host localhost --port 5434 --username=${POSTGRES_USER} --password=${POSTGRES_PASSWORD}
    - yarn workspace @emjpm/api test --coverage

Test @emjpm/app:
  <<: *quality_stage
  <<: *master_based_stage
  only:
    changes:
      - packages/app/**
  artifacts:
    paths:
      - packages/app/coverage
  variables:
    GIT_STRATEGY: none
    JEST_COVERAGE_DIRECTORY: $CI_PROJECT_DIR/packages/app/coverage
  script:
    - yarn workspace @emjpm/app test --coverage

Test @emjpm/knex:
  <<: *quality_stage
  <<: *master_based_stage
  only:
    changes:
      - packages/knex/**
  allow_failure: true
  services:
    - name: $CI_REGISTRY_IMAGE/postgres:$CI_COMMIT_SHA
      command: ["-p", "5434"]
  variables:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: test
  script:
    - npx wait-for-postgres --host localhost --port 5434 --username=${POSTGRES_USER} --password=${POSTGRES_PASSWORD}
    - yarn workspace @emjpm/knex test
