#

.quality_stage: &quality_stage
  stage: "Code Quality"
  dependencies: []

.master_based_stage: &master_based_stage
  variables:
    GIT_STRATEGY: none
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  before_script:
    # NOTE(douglasduteil): create artifact friendly path <3
    # As Gitlab artifacts paths seems to only support relative path, I recreate
    # part of the monorepo structure to be able to share coverage info (for ex.)
    - mkdir -p $CI_PROJECT_DIR/packages/{api,app}
    #
    - cd /app

#


Lint @emjpm/api:
  <<: *quality_stage
  <<: *master_based_stage
  script:
    - yarn workspace @emjpm/api lint

Lint @emjpm/app:
  <<: *quality_stage
  <<: *master_based_stage
  script:
    - yarn workspace @emjpm/app lint

Lint @emjpm/knex:
  <<: *quality_stage
  <<: *master_based_stage
  script:
    - yarn workspace @emjpm/knex lint

Lint @optional/e2e:
  <<: *quality_stage
  <<: *master_based_stage
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - /app/optional/e2e/node_modules/
      - $CI_PROJECT_DIR/.yarn
  script:
    - yarn config set cache-folder $CI_PROJECT_DIR/.yarn
    - yarn run -- lerna exec --scope=@optional/e2e yarn -- --ignore-scripts
    - yarn run -- lerna run --scope=@optional/e2e lint

Lint jest-environment-knex:
  <<: *quality_stage
  <<: *master_based_stage
  script:
    - yarn workspace jest-environment-knex lint
