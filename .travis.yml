---
dist: xenial
language: minimal
git:
  depth: 5

#

_environments:
  - &github_keys
    - secure: "LZyPUNRfrmjaET9B+6on3gKDhSA3iECxYT4q37AVfzzIuumXhm2QkcYGegf2oY5vcZzucJDRSpvtZG+P2pW3mYibsYoPXBJQ0X2hg9EzSnk7cw/18yUmVOb/1ARXc+Cqs10a7k3A+55UoB3ZAyDkNZ+8p5C0DlIrGkvQiIPUB1mA8imAGjaORDdZJSY244Gm3VVnbifgtZUsWyzJ3/V5/ss6sR++jMkOMwLC15X56LPNQnGJkeLGS095U2D7AopF7NcgzD3Qs8a1xoKno29+QnswwtGUVZ2LtT8xqiOh0hp6ypY+Mp6NYcP/1OXxUC8ld+SRwmcS5ZtogUsgI+1Obhvdtk2jyqXgdy0MvEvCXa1OE/HsmvH7loegCxHsELdJ31LZQ+UWGOm3R2+PZ7Ts4qGny40f0bFOJe8bI+8vWiwybW0kvBsG+DEZV+uDVvMw8y+3yxOfNv628od+0D5XfkhgDSR1Y12S7q9vduKJkxYqPqFeCs6yvtV0xxhdJLiJZ8s2zQerCTTMVtyhyGZU4ARkoXrCQTH5IiZltgs6ch0SrLQZdm9fG7YeGi1tpH03S6e4HLJa+dCarscFKOrwBoBJa+yqUUYTTXQJShLqSeWYj5ebozvaZxtPpi1EL6I+BUi2kKn3bZUqmwLv9hU+ladyAwfCQV578C4sm9gVpQ8="
  - &docker_keys
    - secure: "FvmOZDD5nL13rlcQgkcFNrorJnMaLjeVU4PQNeW2wo5trD1TBgj7ajlfs4fCVR6irT9/KJMYwagwb+T1+2XEYZsEePgGajIahrfd8QagfXdV7gxIlqZ0+ebhRA6B6daJgqd1NdGERMParD4Ge0Wc+nX8ezO7SPlmmZXTR1D80niv4PXnGtTbocYT8uBJtghtWS64aTF3YW5EmYJ989kPKYXMqAClXyvws63IP0wc/AKQ+s7r3Kb7XKL1ezvH7MLLA4enBS6zWJss0yXRVGB1dOD8Q+1T125hzt9Lnqf9+NX/6ioyZWY2fPr/ClSS3tBstRgATGStelfkVOuzJ72PsR2/TL+lXomVbr40OBnmFwSppVadXDD9e75cai56154/Cjg2w5PkLTOj7RBnAY8A2DPzfF4tYtERa5ahbZnLk3ZhVWK6YBhN21gwuQWuIHhDfIm67iHBdNWpXf3ohjScEk4vp3fQPkR61PUnWuIxcGSZRZKg3CrcEIrEI3I9r+BfuwimxUy0YkHS14vJ0POV4wovetdMVSIHANfXfFkUWmJFYBT+KzgoSB/j45oRkdec4KNGbQ5QHf4f6Bo0lRMcz4NMsLY02UneDp5Cw57nTufmts/ByNwnp4xJuo43L+imuPrtlsEvU5zqUrSVylM8U7wYKgnxb1i7/szO/2p6QDI="
    - secure: "dGenW2Ud61YKctCEPb5pTk745l4u0pcH/1kKOplriTR8Dt4+fOjlgvbBS6VyVDyt2ayJVyp2jKMwKBYclO4UAd2zK65n+bDO+7g2Pwuv8ju3mJvHRqR2JOAZDXA0mo5NOhH0Ys0eSh1MVPxPvBSCsh1XrU2uxr9IP1xKhs50zeOkG4ahb+NhpIOpJt5ksYQ1kdqczlZ2alIAKtKka085RNRy0J6gFvbBcgEUdSNZjsakZGrACKxax7qCz6GTmz8R6S47gLH9dG4YshXkk+JsAPVY31SgyOetWyqPm9udFNCOdRMotheI6Kbpg87mIrVnlsO3PKfh3y970EkZ6mnhJoKesDGVMgA+GlLiIyEQMJ82qZ7eYKiT8LEiY+uzC3FP6la9PkaQaJryvNfc+tSXexAvBFc8FF9BYZcBJ4G7Es7Db/SrabB6qK2yVU9pQP2IfNxzgB7ElOwd2+6a55xk8hRp2233MMu3cwRGCLpkeu7U/hK+DErP50cRnS3QIEnE63+SPrSQ2T0E5I1ZQ2fhzA+N2uRpxdNB7n5zkQhc7ncXq1slDp+WfATJmXLifnLLFLPtjBE+o3JIM3lVtyR32aZYXwhQ3G9RQneseQoYQiBVrasjy8ZHeA0AUTq7qglkWjjC2DNmY9hVe+vfB8wdfxY9vKtdi1BK61gW7atxl34="

_steps:
  - &node_stage
    language: node_js
    node_js: 10
    before_install:
      - export TZ=Europe/Paris
      - curl -o- -L https://yarnpkg.com/install.sh | bash
      - export PATH="$HOME/.yarn/bin:$PATH"
    cache:
      yarn: true

  - &deploy_stage
    stage: Deploy
    if: type = push AND tag IS present
    env:
      - *docker_keys
    script:
      - docker pull socialgouv/emjpm:latest || true
      - docker pull $DOCKER_IMAGE:latest || true
      #
      - docker build --cache-from $DOCKER_IMAGE:latest -t $DOCKER_IMAGE:$TRAVIS_BRANCH $CONTEXT
      - docker build --cache-from $DOCKER_IMAGE:latest -t $DOCKER_IMAGE:latest $CONTEXT
      #
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker push $DOCKER_IMAGE:$TRAVIS_BRANCH
      - docker push $DOCKER_IMAGE:latest

#

jobs:
  include:
    - <<: *node_stage
      stage: Build
      name: Build and test
      if: NOT env(RELEASE)
      install:
        # Start the database first so it has the time to boot before we interact with it.
        - docker-compose up -d db
        - yarn
      before_script:
        - yarn workspace @emjpm/knex knex migrate:latest --env test
        - yarn workspace @emjpm/knex knex seed:run --env test
      script:
        - yarn build --stream
        # - yarn lint --stream
        - yarn workspace @emjpm/app test --coverage
        - JWT_KEY=lol yarn workspace @emjpm/api test --coverage
      after_script:
        - npx codecov
        - docker-compose down
    - <<: *node_stage
      allow_failure: true
      stage: Build
      name: Run end to end tests
      if: NOT env(RELEASE)
      addons:
        apt:
          packages:
            - libgconf-2-4 # Require by Cypress/Electron
      cache:
        yarn: true
        directories:
          - ./optional/e2e/node_modules
          # Cypress downloader cache folder
          - ~/.cache/Cypress
      env:
        - *docker_keys
      before_install:
        #
        - docker pull socialgouv/emjpm:master || true
        - docker build --cache-from socialgouv/emjpm:master -t socialgouv/emjpm:master .
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin || true
        - docker push socialgouv/emjpm:master || true
        - docker logout || true
        #
        - docker-compose -f ./docker-compose.yaml -f ./docker-compose.test.yaml up -d --build
      install:
        - yarn
        - yarn lerna exec --scope @optional/e2e yarn
      before_script:
        - NODE_ENV=test yarn workspace @emjpm/knex run migrate
        - NODE_ENV=test yarn workspace @emjpm/knex run seeds
      script:
        - yarn lerna run --scope @optional/e2e --stream test
      after_script:
        - docker-compose -f ./docker-compose.yaml -f ./docker-compose.test.yaml down

    #
    #
    #

    - <<: *node_stage
      stage: Release
      if: env(RELEASE)
      name: Make a new release ðŸŽ‰
      env:
        - *github_keys
      before_script:
        - git checkout ${TRAVIS_BRANCH}
        - git config user.name "Social Groovy Bot"
        - git config user.email "45039513+SocialGroovyBot@users.noreply.github.com"
        - git remote set-url origin https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
      script: yarn lerna version ${LERNA_ARGS:=--yes}
      after_success:
        - CONVENTIONAL_GITHUB_RELEASER_TOKEN=${GITHUB_TOKEN} npx conventional-github-releaser -p angular

    #
    #
    #

    - <<: *deploy_stage
      if: type = push AND branch = master
      name: Deploy latest master image
      env:
        - *docker_keys
        - DOCKER_IMAGE="socialgouv/emjpm"
        - CONTEXT=.

    #

    - <<: *deploy_stage
      name: Deploy latest app image to Docker Hub
      env:
        - *docker_keys
        - DOCKER_IMAGE="socialgouv/emjpm-app"
        - CONTEXT=./packages/app

    - <<: *deploy_stage
      name: Deploy latest api image to Docker Hub
      env:
        - *docker_keys
        - DOCKER_IMAGE="socialgouv/emjpm-api"
        - CONTEXT=./packages/api
