---
dist: xenial
language: minimal
git:
  depth: 5

#

_environments:
  - &github_keys
    - secure: "LZyPUNRfrmjaET9B+6on3gKDhSA3iECxYT4q37AVfzzIuumXhm2QkcYGegf2oY5vcZzucJDRSpvtZG+P2pW3mYibsYoPXBJQ0X2hg9EzSnk7cw/18yUmVOb/1ARXc+Cqs10a7k3A+55UoB3ZAyDkNZ+8p5C0DlIrGkvQiIPUB1mA8imAGjaORDdZJSY244Gm3VVnbifgtZUsWyzJ3/V5/ss6sR++jMkOMwLC15X56LPNQnGJkeLGS095U2D7AopF7NcgzD3Qs8a1xoKno29+QnswwtGUVZ2LtT8xqiOh0hp6ypY+Mp6NYcP/1OXxUC8ld+SRwmcS5ZtogUsgI+1Obhvdtk2jyqXgdy0MvEvCXa1OE/HsmvH7loegCxHsELdJ31LZQ+UWGOm3R2+PZ7Ts4qGny40f0bFOJe8bI+8vWiwybW0kvBsG+DEZV+uDVvMw8y+3yxOfNv628od+0D5XfkhgDSR1Y12S7q9vduKJkxYqPqFeCs6yvtV0xxhdJLiJZ8s2zQerCTTMVtyhyGZU4ARkoXrCQTH5IiZltgs6ch0SrLQZdm9fG7YeGi1tpH03S6e4HLJa+dCarscFKOrwBoBJa+yqUUYTTXQJShLqSeWYj5ebozvaZxtPpi1EL6I+BUi2kKn3bZUqmwLv9hU+ladyAwfCQV578C4sm9gVpQ8="
  - &docker_keys
    - secure: "WGQEsSvoMg7arBJDMOYJfS3U0/7jIsaQIMRTg45T/xQXOZK/7xdl0vcUl0H6B9IuMH3WGlFEriRh9lLbnbXqJKODvigGU59zvo9o9PstWSQpdoTzUnaUdrZmvV8zzJmjUIcXnu5EHpMZO8b5Wf1ND1d781IDAdHFoix+OfLCEraIGl6ZBjLZDDV+/vCebqnNVH3RnwAv4vds8/owEN+bucbjoMBWG5lu9sQJFrphljZBikY56oofCHcHzmmyc/0o9qCJfgYMjUYkcbVX/CkMa5nZfUM19nVXt291a/9LWmBHdE81pP0uJ2aapnDne3bq7wQ9Dwvzuh4OsCpWimAQABRgxP700F+Wuo8jgKIG3cD+4iRgm1QHwWtKyx+tRy39tT4IedIKnEq/+XGDGj5ANI/QOhiWY8q9tZNXbuf3ipvWXLmi159vJlbViE9j73LGT2p1zz9cQTELnMC7+E/y8GLgXQQopRbWXQSjKj4A8pQEB+6y337Z8S/XlKETxLb/u/WByZsKVMi37PqJsc14bGgp7pJxc0Ec7YNVY0lsXWi/F+bpNynUj9rPkTDYyHf9MlkMSyfLckIRVux/74Tq9QYN6l/Ldu1ghcEn7q3it9bUZtLgwBNTDcZ4Gc/24ygSiD7jw6uJV3NBqJvDBy2if/Sj6Fqc/YKQ8YRp7uVrAVA="
    - secure: "m80Um5bwdEjFYPx8VrgGe/xUKQN8zDmJANCwAAm58gRQkPRyGwMwvYMqejo+mtvadrY/nhvxKi6FBexRAkrdrONT+hmuElwN/X4TCHaws4plvBGMnLtaVpfWejgcJnvEFFBp6zm95h783t1+RqPnomt//dT29IA6xAiOymhpVi1n2LcNCTA813FzetbkIEZTCPHagzMscKNECXAjZ53D68bhu0aM6jsN2Y/QoeLkNNd7HULUxvoNz5ykVc6A4ddfxIKMZt8rgM7HZvXq5Q5wB/nzF2oq3Ybo1T+IN+ZynNJRrK9EjILSjHVOMA+jIIDvzoY6FV+Kmw6UQTqwK6+2ESVtNTHqgmL9zMgBumK7mMssewB2544rBEH7sQtSkGTbGpdQRci9EmLq0FD8Cj+prLsMCrgQFii/0yqZuR/s+7mGISOM0l+6rwV/69mJkJT4H4vFyXXWRic5evbJ5V3lZfWTG+ftjxKy/k5pj0Uq5OQp4naD2ylcrBmBCBvlrQwNEhy1JArDIfWsCWY1uzKtjOf6W1BF4bMswdTDn8ZuwVNPiRCrZcij2i/FjF91eVDEeeNcRetnJzghVV6iYPrDwA4Eno3MV6bnL9/WodQjHzhlBo4wQQIoYY4ybkTe6PptV3loHTfnbp7zOgJkxuHGLCqKWW24ho4JcmK990RN+OY="

_steps:
  - &node_stage
    skip: true
    language: node_js
    node_js: 10
    before_install:
      - export TZ=Europe/Paris
      - curl -o- -L https://yarnpkg.com/install.sh | bash
      - export PATH="$HOME/.yarn/bin:$PATH"
    cache:
      yarn: true

  - &deploy_stage
    stage: Deploy
    if: type = push AND tag IS present
    script:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      #
      - docker pull socialgouv/emjpm:latest || true
      - docker pull $DOCKER_IMAGE:latest || true
      #
      - docker build --cache-from $DOCKER_IMAGE:latest -t $DOCKER_IMAGE:$TRAVIS_BRANCH $CONTEXT
      - docker build --cache-from $DOCKER_IMAGE:latest -t $DOCKER_IMAGE:latest $CONTEXT
      #
      - docker push $DOCKER_IMAGE:$TRAVIS_BRANCH
      - docker push $DOCKER_IMAGE:latest

#

jobs:
  include:
    - <<: *node_stage
      stage: Build
      name: Build and test
      if: type = pull_request AND NOT env(RELEASE)
      install:
        # Start the database first so it has the time to boot before we interact with it.
        - docker-compose up -d db
        - yarn --frozen-lockfile
      before_script:
        - yarn workspace @emjpm/knex knex migrate:latest --env test
        - yarn workspace @emjpm/knex knex seed:run --env test
      script:
        - yarn build --stream
        # - yarn lint --stream
        - yarn workspace @emjpm/knex test
        - yarn workspace @emjpm/app test --coverage
        - JWT_KEY=lol yarn workspace @emjpm/api test --coverage
      after_script:
        - npx codecov
        - docker-compose down
    - <<: *node_stage
      allow_failure: true
      stage: Build
      name: Run end to end tests
      if: NOT env(RELEASE)
      addons:
        apt:
          packages:
            - libgconf-2-4 # Require by Cypress/Electron
      cache:
        yarn: true
        directories:
          - ./optional/e2e/node_modules
          # Cypress downloader cache folder
          - ~/.cache/Cypress
      before_install:
        #
        - docker pull socialgouv/emjpm:master || true
        - docker build --cache-from socialgouv/emjpm:master -t socialgouv/emjpm:master .
        #
        - docker-compose -f ./docker-compose.yaml -f ./docker-compose.test.yaml up -d --build
      install:
        - yarn
        - yarn lerna exec --scope @optional/e2e yarn
      before_script:
        - NODE_ENV=test yarn workspace @emjpm/knex run migrate
        - NODE_ENV=test yarn workspace @emjpm/knex run seeds
      script:
        - yarn run -- lerna --scope @optional/e2e run cypress:run -- --config video=false
      after_script:
        - docker-compose -f ./docker-compose.yaml -f ./docker-compose.test.yaml down

    #
    #
    #

    - <<: *node_stage
      stage: Release
      if: env(RELEASE)
      name: Make a new release ðŸŽ‰
      git:
        # NOTE(douglasduteil): disable git --depth
        # Try to have all the commits for the release Change Log
        # see travis-ci/travis-ci#3412
        depth: 9999999 # Over 9000 !
      env:
        - *github_keys
      before_script:
        - git checkout ${TRAVIS_BRANCH}
        - git config user.name "Social Groovy Bot"
        - git config user.email "45039513+SocialGroovyBot@users.noreply.github.com"
        - git remote set-url origin https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
      script:
        - GH_TOKEN=${GITHUB_TOKEN} yarn lerna version ${LERNA_ARGS:=--yes}
        - yarn lerna publish from-git --yes
    #
    #
    #

    - <<: *deploy_stage
      if: type = push AND branch = master
      name: Deploy latest master image
      env:
        - *docker_keys
        - DOCKER_IMAGE="socialgouv/emjpm"
        - CONTEXT=.

    #

    - <<: *deploy_stage
      name: Deploy latest app image to Docker Hub
      env:
        - *docker_keys
        - DOCKER_IMAGE="socialgouv/emjpm-app"
        - CONTEXT=./packages/app

    - <<: *deploy_stage
      name: Deploy latest api image to Docker Hub
      env:
        - *docker_keys
        - DOCKER_IMAGE="socialgouv/emjpm-api"
        - CONTEXT=./packages/api
