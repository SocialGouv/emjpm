---
dist: xenial
language: minimal
git:
  depth: 5

#

_environments:
  - &github_keys
    - secure: "LZyPUNRfrmjaET9B+6on3gKDhSA3iECxYT4q37AVfzzIuumXhm2QkcYGegf2oY5vcZzucJDRSpvtZG+P2pW3mYibsYoPXBJQ0X2hg9EzSnk7cw/18yUmVOb/1ARXc+Cqs10a7k3A+55UoB3ZAyDkNZ+8p5C0DlIrGkvQiIPUB1mA8imAGjaORDdZJSY244Gm3VVnbifgtZUsWyzJ3/V5/ss6sR++jMkOMwLC15X56LPNQnGJkeLGS095U2D7AopF7NcgzD3Qs8a1xoKno29+QnswwtGUVZ2LtT8xqiOh0hp6ypY+Mp6NYcP/1OXxUC8ld+SRwmcS5ZtogUsgI+1Obhvdtk2jyqXgdy0MvEvCXa1OE/HsmvH7loegCxHsELdJ31LZQ+UWGOm3R2+PZ7Ts4qGny40f0bFOJe8bI+8vWiwybW0kvBsG+DEZV+uDVvMw8y+3yxOfNv628od+0D5XfkhgDSR1Y12S7q9vduKJkxYqPqFeCs6yvtV0xxhdJLiJZ8s2zQerCTTMVtyhyGZU4ARkoXrCQTH5IiZltgs6ch0SrLQZdm9fG7YeGi1tpH03S6e4HLJa+dCarscFKOrwBoBJa+yqUUYTTXQJShLqSeWYj5ebozvaZxtPpi1EL6I+BUi2kKn3bZUqmwLv9hU+ladyAwfCQV578C4sm9gVpQ8="
  - &docker_keys
    - secure: "LPAABCYpzyVfvCWC8iAEEqhugW9oJKWDQ+cV9R/sZRDAqas3UKUjcKSThMBU/jV7w9Agkb26mvmcdbyEN849Si6MCewH+q4v9HziaNhSxCPjAFmeFXTVwCKzf1SQWqjAnmdfdUezLfp/AAj4rO6Lff/1ceu5YGW/3baJ8bFcdzWdTZBX5ctlu9n+7lv1c/oinePerijmXWywOnuvdJdxNN0jfogyYpCB6JtVdiAliPSEgJ/JV4HTkpHPLlgb25GFqt47CpuSD94e2Zy/CI7l6fxCWPvWuA1yFXrUPgsu+ibC8cJA7DnWsxhNJUh4IyTnqLbaWucm6ySW4o+Bo9msQcVNsZj4+Sm/mwu+SRAjCe5BS4rzovhkDKBjZnNhfLbDfftEubyvIRRr8hnFZiYXNo9FyC08hdFVhU+fWFsgYYsMbCGPSNQZDfaUW6gwuPJ1wL9vMvRbOrQb/hT2Zr04cBuF/3ARBDx4AWf73AmANvsDdUTh86o+B5jc/52JZBcTFtlRoWMYwxXbX17AHqoGswlHuNya/m+zgTmReuzei1mtlHKQtP31ZI8nBpxEuVWyVA9qa7y4Y7oYpwjJ549euy5c8WNwIZVXQh/x7iDFsr+aeVjWoB6aViiG9rjuo+qqm+CBwWhVTcV3ako3rQbNpMW6x0cSRrr0U1SG1CE5Mxs="
    - secure: "fsQoYjKdeMqzd9CnQTSITL53AytIeiMda854RxX5qx+YDL6RR8DGnTbNxUrIMhFCBMu11TeV84/v2O473LZFgtLKuTfD78rMQ0lc4y6QnkwInZaYBdg3CGhCENyP90itPgQ2f68vDTsNoOuDL+Ymp3J94E6QrQ9YlZ7ZdpRSZb84/sPsnzpabw2HVhkoxuMwP8VHiAXBq1MuK5S/9w4d1oFRJ/kVk+mltOsRUoDb7kzm0+BBtVujFnLPfaJF2xbQnCth3lTjTpmqK/h63nBTXli6N4GFzcnKV39jXBHbLbn4Le/WRl+QuGwwt/TL6sZbrBT/Vr4xAbqBfON0i+Go39ok6CN+BGBR2griMLKSsq1xfxP2lQ2W7stqWH4J596cHh33uMkZOEUibC2G6lBg4jvgpRcHdbO3OgvOmG2mD+u5gRKVCvI1WN4Lg5QbX5BUjuL68/G5rDxVFp5/pgde78QOVJXnMEyDUWStU3ApvankkM7lKlxv5RkJMFsqdawx1gU53dlAYP984myR9+B4CLrdccWP2m4Hm/eE5VCOxeFH0Yi6pCwQNGkUJj0xijcW+6H1XRLB1KYhHsBHNkmUD20cHUjjpVzyJrqHlD4E6XlGT1KFYv0QHjF+hrlYyQS1QaVyxSD16nIYWiC1Q2Fh/yDOwvcJhpouUhxENNIfEIY="

_steps:
  - &node_stage
    language: node_js
    node_js: 10
    before_install:
      - export TZ=Europe/Paris
      - curl -o- -L https://yarnpkg.com/install.sh | bash
      - export PATH="$HOME/.yarn/bin:$PATH"
    cache:
      yarn: true

  - &deploy_stage
    stage: Deploy
    if: type = push AND tag IS present
    script:
      - docker pull $DOCKER_IMAGE
      #
      - docker build -t $DOCKER_IMAGE:$TRAVIS_BRANCH $CONTEXT
      - docker build -t $DOCKER_IMAGE:latest $CONTEXT
      #
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker push $DOCKER_IMAGE:$TRAVIS_BRANCH
      - docker push $DOCKER_IMAGE:latest

#

jobs:
  include:
    - <<: *node_stage
      stage: Build
      name: Build and test
      if: NOT env(RELEASE)
      install:
        # Start the database first so it has the time to boot before we interact with it.
        - docker-compose up -d db
        - yarn
      before_script:
        - yarn workspace @emjpm/knex knex migrate:latest --env test
        - yarn workspace @emjpm/knex knex seed:run --env test
      script:
        - yarn build --stream
        # - yarn lint --stream
        - yarn workspace @emjpm/app test --coverage
        - JWT_KEY=lol yarn workspace @emjpm/api test --coverage
      after_script:
        - npx codecov
        - docker-compose down
    - <<: *node_stage
      allow_failure: true
      stage: Build
      name: Run end to end tests
      if: NOT env(RELEASE)
      addons:
        apt:
          packages:
            - libgconf-2-4 # Require by Cypress/Electron
      cache:
        yarn: true
        directories:
          - ./optional/e2e/node_modules
          # Cypress downloader cache folder
          - ~/.cache/Cypress
      env:
        - *docker_keys
      before_install:
        #
        - docker pull socialgouv/emjpm:master || true
        - docker build --cache-from socialgouv/emjpm:master -t socialgouv/emjpm:master .
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin || true
        - docker push socialgouv/emjpm:master || true
        - docker logout || true
        #
        - docker-compose -f ./docker-compose.yaml -f ./docker-compose.test.yaml up -d --build
      install:
        - yarn
        - yarn lerna exec --scope @optional/e2e yarn
      before_script:
        - NODE_ENV=test yarn workspace @emjpm/knex run migrate
        - NODE_ENV=test yarn workspace @emjpm/knex run seeds
      script:
        - yarn lerna run --scope @optional/e2e --stream test
      after_script:
        - docker-compose -f ./docker-compose.yaml -f ./docker-compose.test.yaml down

    #
    #
    #

    - <<: *node_stage
      stage: Release
      if: env(RELEASE)
      name: Make a new release ðŸŽ‰
      env:
        - *github_keys
      before_script:
        - git checkout ${TRAVIS_BRANCH}
        - git config user.name "Social Groovy Bot"
        - git config user.email "45039513+SocialGroovyBot@users.noreply.github.com"
        - git remote set-url origin https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
      script: yarn lerna version ${LERNA_ARGS:=--yes}
      after_success:
        - CONVENTIONAL_GITHUB_RELEASER_TOKEN=${GITHUB_TOKEN} npx conventional-github-releaser -p angular

    #
    #
    #

    - <<: *deploy_stage
      if: type = push AND branch = master
      name: Deploy latest master iamge
      env:
        - *docker_keys
        - DOCKER_IMAGE="socialgouv/emjpm"
        - CONTEXT=.

    #

    - <<: *deploy_stage
      name: Deploy latest app image to Docker Hub
      env:
        - *docker_keys
        - DOCKER_IMAGE="socialgouv/emjpm-app"
        - CONTEXT=./packages/app

    - <<: *deploy_stage
      name: Deploy latest api image to Docker Hub
      env:
        - *docker_keys
        - DOCKER_IMAGE="socialgouv/emjpm-api"
        - CONTEXT=./packages/api
