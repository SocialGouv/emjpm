---
dist: xenial
language: minimal
git:
  depth: 5

#

_environments:
  - &github_keys
    - secure: "LZyPUNRfrmjaET9B+6on3gKDhSA3iECxYT4q37AVfzzIuumXhm2QkcYGegf2oY5vcZzucJDRSpvtZG+P2pW3mYibsYoPXBJQ0X2hg9EzSnk7cw/18yUmVOb/1ARXc+Cqs10a7k3A+55UoB3ZAyDkNZ+8p5C0DlIrGkvQiIPUB1mA8imAGjaORDdZJSY244Gm3VVnbifgtZUsWyzJ3/V5/ss6sR++jMkOMwLC15X56LPNQnGJkeLGS095U2D7AopF7NcgzD3Qs8a1xoKno29+QnswwtGUVZ2LtT8xqiOh0hp6ypY+Mp6NYcP/1OXxUC8ld+SRwmcS5ZtogUsgI+1Obhvdtk2jyqXgdy0MvEvCXa1OE/HsmvH7loegCxHsELdJ31LZQ+UWGOm3R2+PZ7Ts4qGny40f0bFOJe8bI+8vWiwybW0kvBsG+DEZV+uDVvMw8y+3yxOfNv628od+0D5XfkhgDSR1Y12S7q9vduKJkxYqPqFeCs6yvtV0xxhdJLiJZ8s2zQerCTTMVtyhyGZU4ARkoXrCQTH5IiZltgs6ch0SrLQZdm9fG7YeGi1tpH03S6e4HLJa+dCarscFKOrwBoBJa+yqUUYTTXQJShLqSeWYj5ebozvaZxtPpi1EL6I+BUi2kKn3bZUqmwLv9hU+ladyAwfCQV578C4sm9gVpQ8="
  - &gitlab_keys
    - secure: "ERLPGvg90Gsrx13sb4F0d6ut9OuT64zXDTugqVWjXIlK5EkRbaiJf10Q+H8JpPx6/exa2pKioxVE0VJk9g17GNr3gvTBbGGPITBRF90ftE1t3IzkS456x8oBjvii1+YSE9sDr4wJcNyL9n6izR7/6H7+1fm6GkTPEs3TvVOArFbOcKJlbvTk1IEeTE67wG0MbmTXmoQTGzKNcjHhUYfNJZ7H4sp5d6ZFH9lD/3lQz9mjL1pJYaGz9HC+lwcrhcMsBoeHDi5n2QRV6h5QKu5CdN42IK5XnvfAS5a0bU5URFfZmOngnRMCw2ndNrZUHeYRnGtKAGR9ejCrBJSbNbeOsKybJfk3/swJKT9aFnqG5l0v+IuV9Uqu1sVoN2VdDHVD3TIaAmkEqHrISXn0H6PYvp/uuIzlKIcyCZv9h5jGWrEJUJHOBYWlMMBsGhmxaZE4w6xt/cErX/89ofgRjqErhOWn9OfXRNjhXlda+hX9TTDMbsRB449EGUwXBIDk8KwTndW+qBgY2b4A5zNOWcD4F8DCEIBexlWj/Wd5eEUEwvMmHdh7ScTZ4e4Yh3j2Knhi+hOE6xN01Q5brWQbX40oMfQfOVOUe7ytj+i7pjp5QyyLIHSZX265wZ2umnOkbEDZB0snoruTYGJDHOA9lFMizAFLMAXhpUeAAyEFMzKhC5I="

_steps:
  - &node_stage
    language: node_js
    node_js: "10"
    env:
      - JWT_KEY=JWT_KEY
    before_install:
      - export TZ=Europe/Paris
      - curl -o- -L https://yarnpkg.com/install.sh | bash
      - export PATH="$HOME/.yarn/bin:$PATH"
    cache:
      yarn: true

#

jobs:
  include:
    - <<: *node_stage
      if: NOT (env(RELEASE) OR env(PRODUCTION))
      stage: Build
      name: Build and test
      install:
        # Start the database first so it has the time to boot before we interact with it.
        - docker-compose up -d db
        - yarn --frozen-lockfile
      before_script:
        - yarn workspace @emjpm/knex knex migrate:latest --env test
        - yarn workspace @emjpm/knex knex seed:run --env test
      script:
        - yarn build --stream
        # - yarn lint --stream
        - yarn workspace @emjpm/knex test
        # - yarn workspace @emjpm/app test --coverage --coverageReporters text-summary
        - JWT_KEY=lol yarn workspace @emjpm/api test --coverage --coverageReporters text-summary
      after_script:
        - npx codecov
        - docker-compose down

    #
    #
    #

    - <<: *node_stage
      stage: Release
      if: env(RELEASE)
      name: Make a new release 🎉
      git:
        # NOTE(douglasduteil): disable git --depth
        # Try to have all the commits for the release Change Log
        # see travis-ci/travis-ci#3412
        depth: 9999999 # Over 9000 !
      env:
        - *github_keys
      before_script:
        - git checkout ${TRAVIS_BRANCH}
        - git config user.name "Social Groovy Bot"
        - git config user.email "45039513+SocialGroovyBot@users.noreply.github.com"
        - git remote set-url origin https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
      script:
        - GH_TOKEN=${GITHUB_TOKEN} yarn lerna version ${LERNA_ARGS:=--yes}
    #
    #
    #

    - stage: Go Prod
      if: env(PRODUCTION)
      name: A tag is going to production 🏭
      branches:
        only:
        - /v.*/
      env: *gitlab_keys
      script:
        >-
          curl -X POST
          -F token=${GITLAB_TOKEN}
          -F ref=${TRAVIS_BRANCH}
          -F "variables[PRODUCTION]=true"
          https://gitlab.factory.social.gouv.fr/api/v4/projects/34/trigger/pipeline
